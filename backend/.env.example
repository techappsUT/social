# path: backend/.env.example

# ============================================
# Server Configuration
# ============================================
PORT=8080
ENV=development
API_BASE_URL=http://localhost:8080
BASE_URL=http://localhost:3000

# ============================================
# Database Configuration
# ============================================
DB_HOST=localhost
DB_PORT=5432
DB_USER=socialqueue
DB_PASSWORD=socialqueue_dev_password
DB_NAME=socialqueue_dev
DB_SSLMODE=disable
DB_MAX_IDLE_CONNS=10
DB_MAX_OPEN_CONNS=100
DB_CONN_MAX_LIFETIME=1h

# Connection string format (alternative to individual params)
# DATABASE_URL=postgres://socialqueue:socialqueue_dev_password@localhost:5432/socialqueue_dev?sslmode=disable

# ============================================
# Redis Configuration
# ============================================
REDIS_HOST=localhost
REDIS_PORT=6379
REDIS_PASSWORD=
REDIS_DB=0
REDIS_POOL_SIZE=10

# Connection string format (alternative)
# REDIS_URL=redis://localhost:6379/0

# ============================================
# JWT Authentication
# ============================================
# IMPORTANT: Change these secrets in production!
# Generate secure secrets: openssl rand -base64 32
JWT_ACCESS_SECRET=change_this_access_secret_in_production_min_32_chars
JWT_REFRESH_SECRET=change_this_refresh_secret_in_production_min_32_chars
JWT_ISSUER=socialqueue

# Token expiration
JWT_ACCESS_TOKEN_EXPIRY=15m
JWT_REFRESH_TOKEN_EXPIRY=720h  # 30 days

# ============================================
# Email Configuration
# ============================================
# SMTP Settings (for production use SendGrid, AWS SES, Mailgun, etc.)
SMTP_HOST=smtp.mailtrap.io
SMTP_PORT=2525
SMTP_USER=
SMTP_PASSWORD=
SMTP_FROM_EMAIL=noreply@socialqueue.com
SMTP_FROM_NAME=SocialQueue

# Email verification and password reset
EMAIL_VERIFICATION_EXPIRY=24h
PASSWORD_RESET_EXPIRY=1h

# Mock email for development (set to true to log emails instead of sending)
MOCK_EMAIL=true

# ============================================
# Social Media API Credentials
# ============================================
# Twitter/X
TWITTER_CLIENT_ID=
TWITTER_CLIENT_SECRET=
TWITTER_CALLBACK_URL=http://localhost:8080/auth/twitter/callback
TWITTER_API_VERSION=2

# Facebook
FACEBOOK_APP_ID=
FACEBOOK_APP_SECRET=
FACEBOOK_CALLBACK_URL=http://localhost:8080/auth/facebook/callback

# Instagram (via Facebook)
INSTAGRAM_APP_ID=
INSTAGRAM_APP_SECRET=
INSTAGRAM_CALLBACK_URL=http://localhost:8080/auth/instagram/callback

# LinkedIn
LINKEDIN_CLIENT_ID=
LINKEDIN_CLIENT_SECRET=
LINKEDIN_CALLBACK_URL=http://localhost:8080/auth/linkedin/callback

# YouTube
YOUTUBE_CLIENT_ID=
YOUTUBE_CLIENT_SECRET=
YOUTUBE_CALLBACK_URL=http://localhost:8080/auth/youtube/callback

# TikTok
TIKTOK_CLIENT_KEY=
TIKTOK_CLIENT_SECRET=
TIKTOK_CALLBACK_URL=http://localhost:8080/auth/tiktok/callback

# ============================================
# File Storage Configuration
# ============================================
STORAGE_DRIVER=local  # local, s3, gcs
UPLOAD_DIR=./uploads
MAX_UPLOAD_SIZE=10485760  # 10MB in bytes
ALLOWED_FILE_TYPES=image/jpeg,image/png,image/gif,image/webp,video/mp4,video/quicktime

# AWS S3 (if using s3 storage driver)
AWS_REGION=us-east-1
AWS_ACCESS_KEY_ID=
AWS_SECRET_ACCESS_KEY=
AWS_S3_BUCKET=socialqueue-uploads
AWS_S3_ENDPOINT=  # Leave empty for AWS, set for S3-compatible services

# Google Cloud Storage (if using gcs storage driver)
GCS_BUCKET=socialqueue-uploads
GCS_PROJECT_ID=
GCS_CREDENTIALS_FILE=./gcs-credentials.json

# ============================================
# Stripe Payment Integration
# ============================================
STRIPE_SECRET_KEY=sk_test_...
STRIPE_PUBLISHABLE_KEY=pk_test_...
STRIPE_WEBHOOK_SECRET=whsec_...
STRIPE_SUCCESS_URL=http://localhost:3000/billing/success
STRIPE_CANCEL_URL=http://localhost:3000/billing/cancel

# ============================================
# Queue/Background Jobs Configuration
# ============================================
QUEUE_DRIVER=redis  # redis, postgres
QUEUE_CONNECTION=redis
QUEUE_MAX_RETRIES=3
QUEUE_RETRY_DELAY=60s
QUEUE_WORKERS=4

# ============================================
# Caching Configuration
# ============================================
CACHE_DRIVER=redis  # redis, memory
CACHE_TTL=3600  # Default cache TTL in seconds
CACHE_PREFIX=socialqueue:

# ============================================
# Session Configuration
# ============================================
SESSION_DRIVER=redis  # redis, cookie
SESSION_LIFETIME=7200  # 2 hours in seconds
SESSION_SECURE=false  # Set to true in production with HTTPS
SESSION_HTTP_ONLY=true
SESSION_SAME_SITE=lax  # lax, strict, none

# ============================================
# CORS Configuration
# ============================================
CORS_ALLOWED_ORIGINS=http://localhost:3000,http://localhost:3001
CORS_ALLOWED_METHODS=GET,POST,PUT,PATCH,DELETE,OPTIONS
CORS_ALLOWED_HEADERS=Accept,Authorization,Content-Type,X-CSRF-Token
CORS_EXPOSED_HEADERS=Link
CORS_ALLOW_CREDENTIALS=true
CORS_MAX_AGE=300

# ============================================
# Rate Limiting
# ============================================
RATE_LIMIT_ENABLED=true
RATE_LIMIT_REQUESTS_PER_MINUTE=60
RATE_LIMIT_AUTH_REQUESTS_PER_MINUTE=10  # Stricter for auth endpoints

# ============================================
# Security
# ============================================
CSRF_TOKEN_SECRET=change_this_csrf_secret_in_production_min_32_chars
COOKIE_SECRET=change_this_cookie_secret_in_production_min_32_chars
BCRYPT_COST=12  # Higher = more secure but slower (10-14 recommended)

# ============================================
# Monitoring & Logging
# ============================================
LOG_LEVEL=debug  # debug, info, warn, error
LOG_FORMAT=json  # json, text
LOG_OUTPUT=stdout  # stdout, file
LOG_FILE=./logs/app.log

# Sentry (Error Tracking)
SENTRY_DSN=
SENTRY_ENVIRONMENT=development
SENTRY_TRACES_SAMPLE_RATE=0.1

# Prometheus (Metrics)
PROMETHEUS_ENABLED=false
PROMETHEUS_PORT=9090

# ============================================
# Feature Flags
# ============================================
ENABLE_SIGNUP=true
ENABLE_VIDEO_UPLOAD=true
ENABLE_AI_FEATURES=false
ENABLE_TEAM_FEATURES=true
ENABLE_ANALYTICS=true
ENABLE_WEBHOOKS=false

# ============================================
# Development & Debugging
# ============================================
DEBUG=true
VERBOSE_LOGGING=true
SQL_LOGGING=true
ENABLE_PROFILING=false
ENABLE_SWAGGER=true

# Mock external APIs for testing
MOCK_SOCIAL_APIS=false
MOCK_STRIPE=false

# ============================================
# Third-Party Integrations
# ============================================
# OpenAI (for AI features)
OPENAI_API_KEY=
OPENAI_MODEL=gpt-4

# Analytics
GOOGLE_ANALYTICS_ID=
MIXPANEL_TOKEN=

# Support/Chat
INTERCOM_APP_ID=
CRISP_WEBSITE_ID=

# ============================================
# Scheduled Jobs Configuration
# ============================================
# Cron expressions for scheduled tasks
CRON_POST_PUBLISHER=*/1 * * * *  # Every minute
CRON_ANALYTICS_SYNC=0 */6 * * *  # Every 6 hours
CRON_CLEANUP_JOBS=0 0 * * *      # Daily at midnight
CRON_TOKEN_CLEANUP=0 */12 * * *  # Every 12 hours

# ============================================
# Testing Configuration
# ============================================
TEST_DATABASE_URL=postgres://socialqueue:socialqueue_dev_password@localhost:5432/socialqueue_test?sslmode=disable