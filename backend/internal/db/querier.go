// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.28.0

package db

import (
	"context"

	"github.com/google/uuid"
	"github.com/jackc/pgx/v5/pgtype"
)

type Querier interface {
	AcceptInvitation(ctx context.Context, invitationToken *string) error
	// path: backend/sql/team_memberships.sql
	AddMemberToTeam(ctx context.Context, arg AddMemberToTeamParams) (TeamMembership, error)
	CancelSubscription(ctx context.Context, id uuid.UUID) error
	CompleteJobRun(ctx context.Context, arg CompleteJobRunParams) error
	CompleteQueueItem(ctx context.Context, id uuid.UUID) error
	CountScheduledPostsByTeam(ctx context.Context, teamID uuid.UUID) (int64, error)
	CreateInvitation(ctx context.Context, arg CreateInvitationParams) (TeamMembership, error)
	// path: backend/sql/invoices.sql
	CreateInvoice(ctx context.Context, arg CreateInvoiceParams) (Invoice, error)
	// path: backend/sql/jobs.sql
	CreateJobRun(ctx context.Context, arg CreateJobRunParams) (JobRun, error)
	// path: backend/sql/posts.sql
	CreatePost(ctx context.Context, arg CreatePostParams) (Post, error)
	// path: backend/sql/post_attachments.sql
	CreatePostAttachment(ctx context.Context, arg CreatePostAttachmentParams) (PostAttachment, error)
	// path: backend/sql/scheduled_posts.sql
	CreateScheduledPost(ctx context.Context, arg CreateScheduledPostParams) (ScheduledPost, error)
	// path: backend/sql/subscriptions.sql
	CreateSubscription(ctx context.Context, arg CreateSubscriptionParams) (Subscription, error)
	// path: backend/sql/teams.sql
	CreateTeam(ctx context.Context, arg CreateTeamParams) (Team, error)
	// path: backend/sql/users.sql
	CreateUser(ctx context.Context, arg CreateUserParams) (User, error)
	// path: backend/sql/webhooks.sql
	CreateWebhookLog(ctx context.Context, arg CreateWebhookLogParams) (WebhooksLog, error)
	DeletePostAttachment(ctx context.Context, id uuid.UUID) error
	DeletePostAttachmentsByScheduledPost(ctx context.Context, scheduledPostID uuid.UUID) error
	// path: backend/sql/post_queue.sql
	EnqueuePost(ctx context.Context, arg EnqueuePostParams) (PostQueue, error)
	FailJobRun(ctx context.Context, arg FailJobRunParams) error
	FailQueueItem(ctx context.Context, arg FailQueueItemParams) error
	GetAnalyticsByPlatform(ctx context.Context, arg GetAnalyticsByPlatformParams) ([]GetAnalyticsByPlatformRow, error)
	GetAnalyticsByPost(ctx context.Context, postID uuid.UUID) ([]GetAnalyticsByPostRow, error)
	GetAnalyticsTimeSeries(ctx context.Context, arg GetAnalyticsTimeSeriesParams) ([]GetAnalyticsTimeSeriesRow, error)
	GetDuePosts(ctx context.Context, arg GetDuePostsParams) ([]GetDuePostsRow, error)
	GetInvoiceByID(ctx context.Context, id uuid.UUID) (Invoice, error)
	GetInvoiceByStripeID(ctx context.Context, stripeInvoiceID *string) (Invoice, error)
	GetJobRun(ctx context.Context, id uuid.UUID) (JobRun, error)
	// path: backend/sql/plans.sql
	GetPlanByID(ctx context.Context, id uuid.UUID) (Plan, error)
	GetPlanBySlug(ctx context.Context, slug string) (Plan, error)
	GetPostByID(ctx context.Context, id uuid.UUID) (Post, error)
	GetPostByPlatformID(ctx context.Context, arg GetPostByPlatformIDParams) (Post, error)
	GetPostByScheduledPostID(ctx context.Context, scheduledPostID uuid.UUID) (Post, error)
	GetQueueItem(ctx context.Context, id uuid.UUID) (PostQueue, error)
	// path: backend/sql/roles.sql
	GetRoleByID(ctx context.Context, id uuid.UUID) (Role, error)
	GetRoleByName(ctx context.Context, name string) (Role, error)
	GetScheduledPostByID(ctx context.Context, id uuid.UUID) (ScheduledPost, error)
	GetScheduledPostWithAccount(ctx context.Context, id uuid.UUID) (GetScheduledPostWithAccountRow, error)
	GetSocialAccountByID(ctx context.Context, id uuid.UUID) (SocialAccount, error)
	GetSocialAccountWithToken(ctx context.Context, id uuid.UUID) (GetSocialAccountWithTokenRow, error)
	GetSocialToken(ctx context.Context, socialAccountID uuid.UUID) (SocialToken, error)
	GetSubscriptionByStripeID(ctx context.Context, stripeSubscriptionID *string) (Subscription, error)
	GetSubscriptionByTeamID(ctx context.Context, teamID uuid.UUID) (GetSubscriptionByTeamIDRow, error)
	GetTeamAnalyticsSummary(ctx context.Context, arg GetTeamAnalyticsSummaryParams) (GetTeamAnalyticsSummaryRow, error)
	GetTeamByID(ctx context.Context, id uuid.UUID) (Team, error)
	GetTeamBySlug(ctx context.Context, slug string) (Team, error)
	GetTeamMembership(ctx context.Context, arg GetTeamMembershipParams) (GetTeamMembershipRow, error)
	GetTopPerformingPosts(ctx context.Context, arg GetTopPerformingPostsParams) ([]GetTopPerformingPostsRow, error)
	GetUserByEmail(ctx context.Context, email string) (User, error)
	GetUserByID(ctx context.Context, id uuid.UUID) (User, error)
	GetWebhookLog(ctx context.Context, id uuid.UUID) (WebhooksLog, error)
	IncrementPostMetric(ctx context.Context, arg IncrementPostMetricParams) error
	// path: backend/sql/analytics.sql
	InsertAnalyticsEvent(ctx context.Context, arg InsertAnalyticsEventParams) (AnalyticsEvent, error)
	// path: backend/sql/social_accounts.sql
	LinkSocialAccount(ctx context.Context, arg LinkSocialAccountParams) (SocialAccount, error)
	ListActivePlans(ctx context.Context) ([]Plan, error)
	ListExpiringSubscriptions(ctx context.Context, arg ListExpiringSubscriptionsParams) ([]ListExpiringSubscriptionsRow, error)
	ListExpiringTokens(ctx context.Context, expiresAt pgtype.Timestamptz) ([]ListExpiringTokensRow, error)
	ListInvoicesByTeam(ctx context.Context, arg ListInvoicesByTeamParams) ([]Invoice, error)
	ListPendingRetries(ctx context.Context, limit int32) ([]JobRun, error)
	ListPostAttachments(ctx context.Context, scheduledPostID uuid.UUID) ([]PostAttachment, error)
	ListPostsByTeam(ctx context.Context, arg ListPostsByTeamParams) ([]ListPostsByTeamRow, error)
	ListRecentJobRuns(ctx context.Context, arg ListRecentJobRunsParams) ([]JobRun, error)
	ListRoles(ctx context.Context) ([]Role, error)
	ListScheduledPostsByTeam(ctx context.Context, arg ListScheduledPostsByTeamParams) ([]ListScheduledPostsByTeamRow, error)
	ListSocialAccountsByPlatform(ctx context.Context, arg ListSocialAccountsByPlatformParams) ([]SocialAccount, error)
	ListSocialAccountsByTeam(ctx context.Context, teamID uuid.UUID) ([]SocialAccount, error)
	ListTeamMembers(ctx context.Context, teamID uuid.UUID) ([]ListTeamMembersRow, error)
	ListTeamsByUser(ctx context.Context, userID uuid.UUID) ([]Team, error)
	ListUnprocessedWebhooks(ctx context.Context, limit int32) ([]WebhooksLog, error)
	LockNextQueueItems(ctx context.Context, arg LockNextQueueItemsParams) ([]PostQueue, error)
	MarkPostFailed(ctx context.Context, arg MarkPostFailedParams) error
	MarkPostPublished(ctx context.Context, arg MarkPostPublishedParams) error
	MarkUserEmailVerified(ctx context.Context, id uuid.UUID) error
	MarkWebhookFailed(ctx context.Context, arg MarkWebhookFailedParams) error
	MarkWebhookProcessed(ctx context.Context, arg MarkWebhookProcessedParams) error
	RemoveMemberFromTeam(ctx context.Context, arg RemoveMemberFromTeamParams) error
	ResetStaleLocks(ctx context.Context) error
	SoftDeleteScheduledPost(ctx context.Context, id uuid.UUID) error
	SoftDeleteSocialAccount(ctx context.Context, id uuid.UUID) error
	SoftDeleteTeam(ctx context.Context, id uuid.UUID) error
	SoftDeleteUser(ctx context.Context, id uuid.UUID) error
	StartJobRun(ctx context.Context, arg StartJobRunParams) error
	UpdateInvoiceStatus(ctx context.Context, arg UpdateInvoiceStatusParams) error
	UpdateMemberRole(ctx context.Context, arg UpdateMemberRoleParams) (TeamMembership, error)
	UpdatePostAnalytics(ctx context.Context, arg UpdatePostAnalyticsParams) error
	UpdateScheduledPost(ctx context.Context, arg UpdateScheduledPostParams) (ScheduledPost, error)
	UpdateScheduledPostStatus(ctx context.Context, arg UpdateScheduledPostStatusParams) error
	UpdateSocialAccountMetadata(ctx context.Context, arg UpdateSocialAccountMetadataParams) error
	UpdateSocialAccountStatus(ctx context.Context, arg UpdateSocialAccountStatusParams) error
	UpdateSubscriptionStatus(ctx context.Context, arg UpdateSubscriptionStatusParams) error
	UpdateTeam(ctx context.Context, arg UpdateTeamParams) (Team, error)
	UpdateUserLastLogin(ctx context.Context, id uuid.UUID) error
	UpdateUserPassword(ctx context.Context, arg UpdateUserPasswordParams) error
	UpdateUserProfile(ctx context.Context, arg UpdateUserProfileParams) (User, error)
	// path: backend/sql/social_tokens.sql
	UpsertSocialToken(ctx context.Context, arg UpsertSocialTokenParams) (SocialToken, error)
}

var _ Querier = (*Queries)(nil)
