# ============================================================================
# FILE: backend/Dockerfile.worker
# PURPOSE: Production Dockerfile for worker binary
# ============================================================================

# Stage 1: Builder
FROM golang:1.25-alpine AS builder

# Install build dependencies
RUN apk add --no-cache git ca-certificates

# Set working directory
WORKDIR /app

# Copy go mod files
COPY go.mod go.sum ./

# Download dependencies
RUN go mod download

# Copy source code
COPY . .

# Build worker binary
RUN CGO_ENABLED=0 GOOS=linux GOARCH=amd64 \
    go build -ldflags="-w -s" \
    -o /worker \
    ./cmd/worker

# Stage 2: Runtime
FROM alpine:latest

# Install runtime dependencies
RUN apk --no-cache add ca-certificates tzdata

# Create non-root user
RUN addgroup -g 1000 worker && \
    adduser -D -u 1000 -G worker worker

# Set working directory
WORKDIR /app

# Copy binary from builder
COPY --from=builder /worker /app/worker

# Change ownership
RUN chown -R worker:worker /app

# Switch to non-root user
USER worker

# Health check (optional - checks if process is running)
HEALTHCHECK --interval=30s --timeout=3s --start-period=10s --retries=3 \
  CMD ps aux | grep -v grep | grep -q worker || exit 1

# Run worker
CMD ["/app/worker"]